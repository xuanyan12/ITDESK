# 如果导入usrink-framework-mysql模块，需要以下配置
# --
# Druid 主库配置 --------------------------------
# 数据库驱动类
master.druid.datasource.driver=com.mysql.cj.jdbc.Driver
# 数据库连接地址
master.druid.datasource.url=jdbc:mysql://localhost:3306/usrink-pro?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8
# 数据库用户名
master.druid.datasource.username=root
# 数据库密码
master.druid.datasource.password=123456
# 数据库连接池初始化大小
master.druid.datasource.initialSize=5
# 数据库连接池最小空闲连接
master.druid.datasource.minIdle=5
# 数据库连接池最大活跃连接
master.druid.datasource.maxActive=20
# 配置获取连接等待超时的时间
master.druid.datasource.maxWait=60000
# 配置驱动连接超时时间，检测数据库建立连接的超时时间，单位是毫秒
master.druid.datasource.connectTimeout=60000
# 配置网络超时时间，等待数据库操作完成的网络超时时间，单位是毫秒
master.druid.datasource.socketTimeout=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
master.druid.datasource.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
master.druid.datasource.minEvictableIdleTimeMillis=300000
# 配置一个连接在池中最大生存的时间，单位是毫秒
master.druid.datasource.maxEvictableIdleTimeMillis=900000
# 配置连接检测的SQL语句
master.druid.datasource.validationQuery=SELECT 1
# 配置连接检测的超时时间，单位是毫秒
master.druid.datasource.validationQueryTimeout=30000
# 申请连接时执行validationQuery检测连接是否有效，设置true会降低性能。
master.druid.datasource.testOnBorrow=false
# 归还连接时执行validationQuery检测连接是否有效，设置true会降低性能。
master.druid.datasource.testOnReturn=false
# 申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
# 建议配置为true，不影响性能，并且保证安全性
master.druid.datasource.testWhileIdle=true
# Druid 从库配置 --------------------------------
# 是否启用从库，true 启用，false 不启用
slave.druid.datasource.enable=false
# 数据库驱动类
slave.druid.datasource.driver=com.mysql.cj.jdbc.Driver
# 数据库连接地址
slave.druid.datasource.url=jdbc:mysql://xxx.xxx.x.xx:3306/usrink-pro-slave?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8
# 数据库用户名
slave.druid.datasource.username=xxxx
# 数据库密码
slave.druid.datasource.password=xxxxxx
# 数据库连接池初始化大小
slave.druid.datasource.initialSize=5
# 数据库连接池最小空闲连接
slave.druid.datasource.minIdle=5
# 数据库连接池最大活跃连接
slave.druid.datasource.maxActive=20
# 配置获取连接等待超时的时间
slave.druid.datasource.maxWait=60000
# 配置驱动连接超时时间，检测数据库建立连接的超时时间，单位是毫秒
slave.druid.datasource.connectTimeout=60000
# 配置网络超时时间，等待数据库操作完成的网络超时时间，单位是毫秒
slave.druid.datasource.socketTimeout=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
slave.druid.datasource.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
slave.druid.datasource.minEvictableIdleTimeMillis=300000
# 配置一个连接在池中最大生存的时间，单位是毫秒
slave.druid.datasource.maxEvictableIdleTimeMillis=900000
# 配置连接检测的SQL语句
slave.druid.datasource.validationQuery=SELECT 1
# 配置连接检测的超时时间，单位是毫秒
slave.druid.datasource.validationQueryTimeout=30000
# 申请连接时执行validationQuery检测连接是否有效，设置true会降低性能。
slave.druid.datasource.testOnBorrow=false
# 归还连接时执行validationQuery检测连接是否有效，设置true会降低性能。
slave.druid.datasource.testOnReturn=false
# 申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
# 建议配置为true，不影响性能，并且保证安全性
slave.druid.datasource.testWhileIdle=true