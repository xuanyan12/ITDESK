<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ink.usr.admin.mapper.SysControlAssetMapper">

    <!-- 查询电脑资产列表 -->
    <select id="getCoputerAssetList" resultType="ink.usr.admin.dao.VO.SysControlBillListVO">
        SELECT
        c.id,
        c.ciName,
        c.modelOrVersion,
        c.ntAccount,
        CONCAT(c.lastName, ' ', c.firstName) as userName,
        u.department,
        c.wbsNum,
        CAST(c.price AS DECIMAL(10,2)) as price,
        MAX(i.cost_center) as costCenter,
        CAST(MAX(i.acquis_val) AS DECIMAL(10,2)) as ifrsValue,
        CAST(MAX(i.book_val) AS DECIMAL(10,2)) as ifrsAllResidualValue,
        CAST(MAX(p.book_val) AS DECIMAL(10,2)) as prcAllResidualValue
        FROM sys_control c
        LEFT JOIN sys_user u ON c.ntAccount = u.userName
        LEFT JOIN sys_ifrs i ON c.wbsNum = i.wbs_element
        LEFT JOIN sys_prc p ON i.asset = p.asset
        <where>
            <if test="ciName != null and ciName != ''">
                AND LOWER(c.ciName) LIKE CONCAT('%', LOWER(#{ciName}), '%')
            </if>
            <if test="ntAccount != null and ntAccount != ''">
                AND LOWER(c.ntAccount) LIKE CONCAT('%', LOWER(#{ntAccount}), '%')
            </if>
            <if test="ntAccountList != null and ntAccountList.size() > 0">
                AND c.ntAccount IN
                <foreach collection="ntAccountList" item="nt" open="(" close=")" separator=",">
                    #{nt}
                </foreach>
            </if>
            <if test="department != null and department != ''">
                AND LOWER(c.department) LIKE CONCAT('%', LOWER(#{department}), '%')
            </if>
            <if test="wbsNum != null and wbsNum != ''">
                AND LOWER(c.wbsNum) LIKE CONCAT('%', LOWER(#{wbsNum}), '%')
            </if>
            <if test="wbsNumList != null and wbsNumList.size() > 0">
                AND c.wbsNum IN
                <foreach collection="wbsNumList" item="wbs" open="(" close=")" separator=",">
                    #{wbs}
                </foreach>
            </if>
        </where>
        GROUP BY c.id, c.ciName, c.modelOrVersion, c.ntAccount, c.firstName, c.lastName, c.department, c.wbsNum, c.price
        <if test="residualValueStatus != null and residualValueStatus != ''">
            HAVING 
            <choose>
                <when test="residualValueStatus == 'zero'">
                    (CASE WHEN CAST(MAX(i.acquis_val) AS DECIMAL(10,2)) = 0 OR CAST(MAX(i.acquis_val) AS DECIMAL(10,2)) IS NULL THEN 0 
                          ELSE CAST(MAX(i.book_val) AS DECIMAL(10,2)) * (CAST(c.price AS DECIMAL(10,2)) / CAST(MAX(i.acquis_val) AS DECIMAL(10,2))) 
                     END) = 0
                </when>
                <when test="residualValueStatus == 'nonzero'">
                    (CASE WHEN CAST(MAX(i.acquis_val) AS DECIMAL(10,2)) = 0 OR CAST(MAX(i.acquis_val) AS DECIMAL(10,2)) IS NULL THEN 0 
                          ELSE CAST(MAX(i.book_val) AS DECIMAL(10,2)) * (CAST(c.price AS DECIMAL(10,2)) / CAST(MAX(i.acquis_val) AS DECIMAL(10,2))) 
                     END) > 0
                </when>
            </choose>
        </if>
    </select>

    <!-- 批量更新IFRS数据 -->
    <update id="batchUpdateIfrsData">
        INSERT INTO sys_ifrs (
        asset,
        cost_center,
        capitalized_on,
        wbs_element,
        asset_class,
        currency,
        acquis_val,
        accum_dep,
        book_val
        ) VALUES
        <foreach collection="list" item="item" separator=",">
            (
            #{item.asset},
            #{item.costCenter},
            #{item.capitalizedOn},
            #{item.wbsElement},
            #{item.assetClass},
            #{item.currency},
            #{item.acquisVal},
            #{item.accumDep},
            #{item.bookVal}
            )
        </foreach>
        ON DUPLICATE KEY UPDATE
        cost_center = VALUES(cost_center),
        capitalized_on = VALUES(capitalized_on),
        wbs_element = VALUES(wbs_element),
        asset_class = VALUES(asset_class),
        currency = VALUES(currency),
        acquis_val = VALUES(acquis_val),
        accum_dep = VALUES(accum_dep),
        book_val = VALUES(book_val)
    </update>

    <!-- 批量更新PRC数据 -->
    <update id="batchUpdatePrcData">
        INSERT INTO sys_prc (
        asset,
        cost_center,
        capitalized_on,
        wbs_element,
        asset_class,
        currency,
        acquis_val,
        accum_dep,
        book_val
        ) VALUES
        <foreach collection="list" item="item" separator=",">
            (
            #{item.asset},
            #{item.costCenter},
            #{item.capitalizedOn},
            #{item.wbsElement},
            #{item.assetClass},
            #{item.currency},
            #{item.acquisVal},
            #{item.accumDep},
            #{item.bookVal}
            )
        </foreach>
        ON DUPLICATE KEY UPDATE
        cost_center = VALUES(cost_center),
        capitalized_on = VALUES(capitalized_on),
        wbs_element = VALUES(wbs_element),
        asset_class = VALUES(asset_class),
        currency = VALUES(currency),
        acquis_val = VALUES(acquis_val),
        accum_dep = VALUES(accum_dep),
        book_val = VALUES(book_val)
    </update>

</mapper>